@{
    ViewBag.Title = "Products";
}
<style>
    .cart_anchor {
        float: right;
        vertical-align: top;
        background: url('../Content/img/cart-icon.png') no-repeat center center / 100% auto;
        background-color: white;
        width: 50px;
        height: 50px;
        margin-bottom: 50px;
        position: fixed;
        left: 90%;
        top: 2px;
        z-index: 10000;
        border-radius: 20px;
    }

    .shopping-cart {
        margin: 20px 0;
        float: right;
        width: 320px;
        position: fixed;
        border-radius: 3px;
        padding: 20px;
        top: 50px;
        left: 70%;
        z-index: 1000;
    }
</style>
<div class="container" ng-app="MyApp">
    <div class="page-header">
        <h2>Products</h2>
    </div>
    <div class="row" ng-controller="PaginationCtrl">

        <div class="col-md-3 sticky">
            <div class="widget z-depth-1">

                <aside> 
                    <div class="card">
                        <article class="card-group-item" ng-repeat="item in Attributes">
                            <header class="card-header">
                                <h6 class="title">{{item.AttributeName}} </h6>
                            </header>
                            <div class="filter-content">
                                <div class="card-body">
                                    <form>
                                        <label class="form-check" ng-repeat="itemvalue in AttributesValue | filter:{AttributeId:item.Id}|unique:AttributeValue">
                                            <input class="form-check-input" type="checkbox" value="">
                                            <span class="form-check-label">
                                                {{itemvalue.AttributeValue}}
                                            </span>
                                        </label> <!-- form-check.// -->

                                    </form>
                                </div> <!-- card-body.// -->
                            </div>
                        </article> <!-- card-group-item.// -->
                        <!-- card-group-item.// -->
                    </div> <!-- card.// -->


                </aside>


            </div>
        </div>
        <div class="col-md-9">
            <a class="cart_anchor" id="cart"><span class="badge badge-success">{{CartProductsCounter}}</span></a>
            <div class="shopping-cart">

                <ul class="list-group" ng-repeat="item in AllCartItems">

                    <li class="list-group-item justify-content-between">
                        <div class="row">
                            <div class="col-md-3">
                                <img class="responsive-img" style="width:50px;height:50px;" src="http://localhost:14988/ProductImages/{{item.Image}}" alt="Card image cap">
                            </div>
                            <div class="col-md-9">
                                <h5>{{item.ProductName}}</h5>
                                <p>Quantity : {{item.Quantity}}</p>
                            </div>
                        </div>
                    </li>

                </ul>



            </div> <!--end shopping-cart -->
            <!--end container -->
            <div class="card">
                <div class="card-header">
                    <form class="form-inline pull-right">
                        <i class="fa fa-search" aria-hidden="true"></i>
                        <input class="form-control form-control-sm ml-3 w-75" type="text" placeholder="Search" aria-label="Search">
                    </form>
                    <h4>Products</h4>
                </div>
                <div class="card-body">
                    <div class="col-sm-4" style="float:left" ng-repeat="x in pagedItems track by $index ">

                        <div class="card">

                            <!-- Card image -->
                            <div class="view overlay">
                                <img class="card-img-top" style="width:231px;height:173px;" src="http://localhost:14988/ProductImages/{{x[2]}}" alt="Card image cap">
                                <a>
                                    <div class="mask rgba-white-slight"></div>
                                </a>
                            </div>

                            <!-- Button -->
                            <div class="card-body">


                                <!-- Title -->
                                <h4 class="card-title">{{x[3]}}</h4>
                                <hr>
                                <!-- Text -->
                                <p class="card-text">Some quick example text to build on the card title and make up the bulk Quantity {{x[5]}}.</p>
                                <!-- Link -->
                                <a href="#!" class="black-text d-flex justify-content-end" id="pid{{x[3]}}" ng-click="AddToCart(x[3],this)"><h5>Add to Cart <i class="fa fa-angle-double-right"></i></h5></a>

                            </div>
                            <!-- Card content -->


                        </div>
                        @*<div class="card">
                                <img class="card-img-top img-thumbnail responsive-img" style="width:350px;height:272px;" src="http://localhost:14988/ProductImages/{{x[2]}}" alt="Card image cap">
                                <div class="card-body">
                                    <h5 class="card-title">{{x[3]}}</h5>
                                    <p class="card-text">Quantity {{x[5]}}.</p>
                                    <a href="#" class="btn btn-primary" id="pid{{x[3]}}" ng-click="AddToCart(x[3],this)">Add to Cart</a>
                                </div>
                            </div>*@
                        <br />
                    </div>
                </div>
                <div class="card-footer text-muted">
                    <button class="btn btn-success" href="#" ng-class="nextPageDisabledClass()" ng-click="loadMore()">Load More</button>
                </div>
            </div>


        </div>

    </div>

</div>



@section scripts
{
    <script>


        var app = angular.module("MyApp", []);
        app.filter('unique', function () {
            // we will return a function which will take in a collection
            // and a keyname
            return function (collection, keyname) {
                // we define our output and keys array;
                var output = [],
                    keys = [];
                debugger;
                // we utilize angular's foreach function
                // this takes in our original collection and an iterator function
                angular.forEach(collection, function (item) {
                    // we check to see whether our object exists
                    var key = item.AttributeValue;
                    // if it's not already part of our keys array
                    if (keys.indexOf(key) === -1) {
                        // add it to our keys array
                        keys.push(key);
                        // push this item to our final output array
                        output.push(item);
                    }
                });
                // return our array which should be devoid of
                // any duplicates
                return output;
            };
        });
        app.factory("AddToCart", function () {


            return {
                flyToElement: function (flyer, flyingTo) {
                    var $func = $(this);
                    var divider = 3;
                    var flyerClone = $(flyer).clone();
                    $(flyerClone).css({ position: 'absolute', top: $(flyer).offset().top + "px", left: $(flyer).offset().left + "px", opacity: 1, 'z-index': 1000 });
                    $('body').append($(flyerClone));
                    var gotoX = $(flyingTo).offset().left + ($(flyingTo).width() / 2) - ($(flyer).width() / divider) / 2;
                    var gotoY = $(flyingTo).offset().top + ($(flyingTo).height() / 2) - ($(flyer).height() / divider) / 2;

                    $(flyerClone).animate({
                        opacity: 0.4,
                        left: gotoX,
                        top: gotoY,
                        width: $(flyer).width() / divider,
                        height: $(flyer).height() / divider
                    }, 700,
                    function () {
                        $(flyingTo).fadeOut('fast', function () {
                            $(flyingTo).fadeIn('fast', function () {
                                $(flyerClone).fadeOut('fast', function () {
                                    $(flyerClone).remove();
                                });
                            });
                        });
                    });
                }
            };
        });

        app.controller("PaginationCtrl", function ($scope, AddToCart) {

            $scope.itemsPerPage = 5;
            $scope.currentPage = 0;
            $scope.total = 0;
            $scope.pagedItems = [];
            $scope.CartProductsCounter = 0;
            $scope.CartItem = { ProductId: 0, Image: '', Quantity: 0, ProductName: "" };
            $scope.AllCartItems = [];
            $scope.Attributes = [];
            $scope.AttributesValue = [];

            $scope.loadData = function (offset, limit) {
                $.ajax({
                    url: '/Models/GetProducts.ashx',
                    type: 'GET',
                    dataType: 'json',
                    data: { displayLength: limit, displayStart: offset, searchText: "" },
                    success: function (data, textStatus, xhr) {

                        $scope.total = data.iTotalDisplayRecords;
                        $scope.pagedItems = $scope.pagedItems.concat(data.aaData);

                        $scope.$apply();
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        return items = [];
                    }
                });

                $scope.loadFilters();


            };
            //$scope.FilterValues = function (fullValues, filterwith) {

            //    var items = [];

            //    for(var i=0;i<fullValues.length;i++)
            //    {
            //        if (fullValues[i].AttributeName == filterwith)
            //        {
            //            items.push(fullValues[i]);
            //        }
            //    }
            //    debugger;
            //    return items;
            //};
            $scope.loadFilters = function () {

                $.ajax({
                    url: '/api/Products/GetAttributes',
                    type: 'GET',
                    dataType: 'json',
                    success: function (data, textStatus, xhr) {

                        $scope.Attributes = data;

                      
                        $scope.$apply();
                    },
                    error: function (xhr, textStatus, errorThrown) {
                         $scope.Attributes = [];
                    }
                });
                $.ajax({
                    url: '/api/Products/GetAttributesValue',
                    type: 'GET',
                    dataType: 'json',
                    success: function (data, textStatus, xhr) {

                        $scope.AttributesValue = data;

                      
                        $scope.$apply();
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        $scope.Attributes = [];
                    }
                });
            };
            $scope.loadMore = function () {
                $scope.currentPage++;
                $scope.loadData($scope.currentPage * $scope.itemsPerPage, $scope.itemsPerPage);

            };

            $scope.nextPageDisabledClass = function () {
                return $scope.currentPage === $scope.pageCount() - 1 ? "disabled" : "";
            };

            $scope.pageCount = function () {
                return Math.ceil($scope.total / $scope.itemsPerPage);
            };

            $scope.AddToCart = function (productId, product) {
                $scope.CartProductsCounter++;
                //Scroll to top if cart icon is hidden on top
                $('html, body').animate({
                    'scrollTop': $(".cart_anchor").position().top
                });
                var itemImg = $("#pid" + productId).parent().parent().find('img').eq(0);
                AddToCart.flyToElement($(itemImg), $('.cart_anchor'));
                debugger;
                var item = $scope.AllCartItems.filter(function (item) {
                    return item.ProductId === product.x[8];
                })[0];
                if (item == undefined) {
                    $scope.AllCartItems.push({ ProductId: product.x[8], Image: product.x[2], Quantity: 1, ProductName: product.x[3] });
                } else {

                }

                $scope.$apply();


            };

            $scope.loadData($scope.currentPage * $scope.itemsPerPage, $scope.itemsPerPage);
        });

        $("#cart").on("click", function () {
            $(".shopping-cart").fadeToggle("fast");
        });

    </script>
}